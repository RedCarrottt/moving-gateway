#include <tizen.h>
#include <service_app.h>
#include <rvc_api.h>

/* RedCarrottt Start */
#include <cstring>
#include <sstream>

#include "rvc.h"

#define NUM_BULBS 3
float max_pos_x[NUM_BULBS];
float max_pos_y[NUM_BULBS];

void update_max_rssi(float x, float y) {

}

int get_pos(int bulb_num, float* px, float* py) {
	if(px == NULL || py == NULL)
		return -1;
	if(buib_num < 0 || bulb_num >= NUM_BULBS) {
		dlog_print(DLOG_ERROR, TAG_LOG, "bulb_num range is incorrect: %d", bulb_num);
		return -2;
	}

	*px = max_pos_x[bulb_num]

	return 0;
}

/* RedCarrottt End */

bool service_app_create(void *data)
{
	if(rvc_initialize()!=RVC_USER_ERROR_NONE)
	{
		return false;
	}

	// Todo: add your code here.
	return true;
}

void service_app_terminate(void *data)
{
	rvc_deinitialize();

    // Todo: add your code here.
    return;
}

void service_app_control(app_control_h app_control, void *data)
{
    // Todo: add your code here.
    return;
}

static void
service_app_lang_changed(app_event_info_h event_info, void *user_data)
{
	/*APP_EVENT_LANGUAGE_CHANGED*/
	return;
}

static void
service_app_region_changed(app_event_info_h event_info, void *user_data)
{
	/*APP_EVENT_REGION_FORMAT_CHANGED*/
}

static void
service_app_low_battery(app_event_info_h event_info, void *user_data)
{
	/*APP_EVENT_LOW_BATTERY*/
}

static void
service_app_low_memory(app_event_info_h event_info, void *user_data)
{
	/*APP_EVENT_LOW_MEMORY*/
}

int main(int argc, char* argv[])
{
    char ad[50] = {0,};
	service_app_lifecycle_callback_s event_callback;
	app_event_handler_h handlers[5] = {NULL, };

	event_callback.create = service_app_create;
	event_callback.terminate = service_app_terminate;
	event_callback.app_control = service_app_control;

	service_app_add_event_handler(&handlers[APP_EVENT_LOW_BATTERY], APP_EVENT_LOW_BATTERY, service_app_low_battery, &ad);
	service_app_add_event_handler(&handlers[APP_EVENT_LOW_MEMORY], APP_EVENT_LOW_MEMORY, service_app_low_memory, &ad);
	service_app_add_event_handler(&handlers[APP_EVENT_LANGUAGE_CHANGED], APP_EVENT_LANGUAGE_CHANGED, service_app_lang_changed, &ad);
	service_app_add_event_handler(&handlers[APP_EVENT_REGION_FORMAT_CHANGED], APP_EVENT_REGION_FORMAT_CHANGED, service_app_region_changed, &ad);

	return service_app_main(argc, argv, &event_callback, ad);
}
